{"ast":null,"code":"import _defineProperty from \"/Users/dsklff/Desktop/azimut-lab/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dsklff/Desktop/azimut-lab/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport paginate from 'paginate-array';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      size: 5,\n      page: 1,\n      currPage: null,\n      isLoaded: false\n    };\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(todos => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            size = _this$state.size;\n      const currPage = paginate(todos, page, size);\n      this.setState(_objectSpread({}, this.state, {\n        todos,\n        currPage,\n        isLoaded: true\n      }));\n    });\n  }\n\n  previousPage() {\n    const _this$state2 = this.state,\n          currPage = _this$state2.currPage,\n          page = _this$state2.page,\n          size = _this$state2.size,\n          todos = _this$state2.todos;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  nextPage() {\n    const _this$state3 = this.state,\n          currPage = _this$state3.currPage,\n          page = _this$state3.page,\n          size = _this$state3.size,\n          todos = _this$state3.todos;\n\n    if (page < currPage.totalPages) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState(_objectSpread({}, this.state, {\n        page: newPage,\n        currPage: newCurrPage\n      }));\n    }\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    const _this$state4 = this.state,\n          todos = _this$state4.todos,\n          page = _this$state4.page;\n    const newSize = +value;\n    const newPage = 1;\n    const newCurrPage = paginate(todos, newPage, newSize);\n    this.setState(_objectSpread({}, this.state, {\n      size: newSize,\n      page: newPage,\n      currPage: newCurrPage\n    }));\n  }\n\n  render() {\n    const _this$state5 = this.state,\n          page = _this$state5.page,\n          size = _this$state5.size,\n          currPage = _this$state5.currPage,\n          isLoaded = _this$state5.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading...\");\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"page: \", page), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"size: \", size), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Size\"), React.createElement(\"select\", {\n      name: \"size\",\n      id: \"size\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      value: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"25\"))), currPage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, currPage.data.map(todo => React.createElement(\"div\", {\n      key: todo.id,\n      style: {\n        width: \"400px\",\n        height: \"100px\",\n        border: \"0.1px solid #000\",\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        lineHeight: \"100px\",\n        backgroundColor: \"#FFFF\",\n        borderRadius: \"10px\",\n        marginBottom: \"20px\",\n        boxShadow: \"0px 4px 1px rgba(0, 0, 0, 0.25)\",\n        fontFamily: \"Montserrat\",\n        fontStyle: \"normal\",\n        fontWeight: \"bold\",\n        fontSize: \"20px\",\n        position: \"relative\",\n        left: \"0%\",\n        right: \"0%\",\n        top: \"0%\",\n        bottom: \"0%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dot\",\n      style: {\n        height: \"60px\",\n        width: \"60px\",\n        backgroundColor: todo.completed ? \"#008F7A\" : \"#EBEBEB\",\n        borderRadius: \"50%\",\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        lineHeight: \"100px\",\n        left: \"6%\",\n        right: \"79%\",\n        top: \"20%\",\n        bottom: \"20%\",\n        position: \"absolute\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: \"250px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        lineHeight: \"100px\",\n        position: \"absolute\",\n        left: \"25%\",\n        right: \"0%\",\n        top: \"0%\",\n        bottom: \"38%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, todo.title)))), React.createElement(\"button\", {\n      onClick: this.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Previous Page\"), React.createElement(\"button\", {\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Next Page\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsklff/Desktop/azimut-lab/src/App.js"],"names":["React","Component","paginate","App","constructor","props","state","todos","size","page","currPage","isLoaded","previousPage","bind","nextPage","handleChange","componentDidMount","fetch","then","response","json","setState","newPage","newCurrPage","totalPages","e","value","target","newSize","render","data","map","todo","id","width","height","border","textAlign","verticalAlign","lineHeight","backgroundColor","borderRadius","marginBottom","boxShadow","fontFamily","fontStyle","fontWeight","fontSize","position","left","right","top","bottom","completed","display","overflow","textOverflow","whiteSpace","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport paginate from 'paginate-array';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      size: 5,\n      page: 1,\n      currPage: null,\n      isLoaded: false\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/todos`)\n      .then(response => response.json())\n      .then(todos => {\n        const { page, size } = this.state;\n\n        const currPage = paginate(todos, page, size);\n\n        this.setState({\n          ...this.state,\n          todos,\n          currPage,\n          isLoaded: true\n        });\n      });\n  }\n\n  previousPage() {\n    const { currPage, page, size, todos } = this.state;\n\n    if (page > 1) {\n      const newPage = page - 1;\n      const newCurrPage = paginate(todos, newPage, size);\n\n      this.setState({\n        ...this.state,\n        page: newPage,\n        currPage: newCurrPage\n      });\n    }\n  }\n\n  nextPage() {\n    const { currPage, page, size, todos } = this.state;\n\n    if (page < currPage.totalPages) {\n      const newPage = page + 1;\n      const newCurrPage = paginate(todos, newPage, size);\n      this.setState({ ...this.state, page: newPage, currPage: newCurrPage });\n    }\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    const { todos, page } = this.state;\n\n    const newSize = +value;\n    const newPage = 1;\n    const newCurrPage = paginate(todos, newPage, newSize);\n\n    this.setState({\n      ...this.state,\n      size: newSize,\n      page: newPage,\n      currPage: newCurrPage\n    });\n  }\n\n  render() {\n    const { page, size, currPage, isLoaded } = this.state;\n    if(!isLoaded) {\n      return <div>Loading...</div>\n    } else return (\n      <div>\n        <div>page: {page}</div>\n        <div>size: {size}</div>\n        <div>\n          <label for=\"size\">Size</label>\n          <select name=\"size\" id=\"size\" onChange={this.handleChange}>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"25\">25</option>\n          </select>\n        </div>\n        {currPage &&\n          <div>\n            {currPage.data.map(todo => \n              <div key={todo.id} style={{width: \"400px\", height: \"100px\", border: \"0.1px solid #000\", textAlign: \"center\", verticalAlign: \"middle\", lineHeight: \"100px\", backgroundColor: \"#FFFF\", borderRadius: \"10px\", marginBottom: \"20px\", boxShadow: \"0px 4px 1px rgba(0, 0, 0, 0.25)\", fontFamily: \"Montserrat\", fontStyle: \"normal\", fontWeight: \"bold\", fontSize: \"20px\", position: \"relative\", left: \"0%\", right: \"0%\", top: \"0%\", bottom: \"0%\"}}>\n                <span className=\"dot\" style={{height: \"60px\", width: \"60px\", backgroundColor: todo.completed ? \"#008F7A\" : \"#EBEBEB\", borderRadius: \"50%\", display: \"inline-block\", verticalAlign: \"middle\", lineHeight: \"100px\", left: \"6%\", right: \"79%\", top: \"20%\", bottom: \"20%\", position: \"absolute\"}}></span>\n                  <div style = {{width: \"250px\",  overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", lineHeight: \"100px\", position: \"absolute\", left: \"25%\", right: \"0%\", top: \"0%\", bottom: \"38%\"}}>{todo.title}</div>\n                </div>)}\n              </div>\n        }\n        <button onClick={this.previousPage}>Previous Page</button>\n        <button onClick={this.nextPage}>Next Page</button>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}