{"ast":null,"code":"var _jsxFileName = \"/Users/dsklff/Desktop/azimut-lab/src/App.js\";\nimport React from 'react';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(data => {\n      this.setState({\n        todos: data,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        todos = _this$state.todos,\n        isLoaded = _this$state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, todos.map(todo => React.createElement(\"div\", {\n        key: todo.id,\n        style: {\n          width: \"400px\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\",\n          height: \"100px\",\n          border: \"0.1px solid #000\",\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          lineHeight: \"100px\",\n          backgroundColor: \"#FFFF\",\n          borderRadius: \"10px\",\n          marginBottom: \"30px\",\n          boxShadow: \"0px 4px 1px rgba(0, 0, 0, 0.25)\",\n          fontFamily: \"Montserrat\",\n          fontStyle: \"normal\",\n          fontWeight: \"bold\",\n          fontSize: \"20px\",\n          position: \"relative\",\n          left: \"0%\",\n          right: \"0%\",\n          top: \"0%\",\n          bottom: \"0%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dot\",\n        style: {\n          height: \"60px\",\n          width: \"60px\",\n          backgroundColor: todo.completed ? \"#008F7A\" : \"#EBEBEB\",\n          borderRadius: \"50%\",\n          display: \"inline-block\",\n          verticalAlign: \"middle\",\n          lineHeight: \"110px\",\n          left: \"6%\",\n          right: \"79%\",\n          top: \"20%\",\n          bottom: \"20%\",\n          position: \"absolute\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          left: \"27%\",\n          right: \"7.25%\",\n          top: \"38%\",\n          bottom: \"38%\",\n          position: \"absolute\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, todo.title), \" \")));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsklff/Desktop/azimut-lab/src/App.js"],"names":["React","App","Component","constructor","state","todos","isLoaded","componentDidMount","fetch","then","response","json","data","setState","render","map","todo","id","width","overflow","textOverflow","whiteSpace","height","border","textAlign","verticalAlign","lineHeight","backgroundColor","borderRadius","marginBottom","boxShadow","fontFamily","fontStyle","fontWeight","fontSize","position","left","right","top","bottom","completed","display","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      todos: [],\n      isLoaded: false,\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n              todos: data,\n              isLoaded: true,\n            })\n        })\n  }\n\n  render() {\n\n    var { todos, isLoaded } = this.state;\n\n    if(!isLoaded) {\n        return <div>Loading...</div>\n    } else {\n        return (\n          <div>\n              {todos.map(todo => (\n                <div key={todo.id} style={{width: \"400px\",  overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", height: \"100px\", border: \"0.1px solid #000\", textAlign: \"center\", verticalAlign: \"middle\", lineHeight: \"100px\", backgroundColor: \"#FFFF\", borderRadius: \"10px\", marginBottom: \"30px\", boxShadow: \"0px 4px 1px rgba(0, 0, 0, 0.25)\", fontFamily: \"Montserrat\", fontStyle: \"normal\", fontWeight: \"bold\", fontSize: \"20px\", position: \"relative\", left: \"0%\", right: \"0%\", top: \"0%\", bottom: \"0%\"}}>\n                    <span className=\"dot\" style={{height: \"60px\", width: \"60px\", backgroundColor: todo.completed ? \"#008F7A\" : \"#EBEBEB\", borderRadius: \"50%\", display: \"inline-block\", verticalAlign: \"middle\", lineHeight: \"110px\", left: \"6%\", right: \"79%\", top: \"20%\", bottom: \"20%\", position: \"absolute\"}}></span>\n                    <div style = {{left: \"27%\", right: \"7.25%\", top: \"38%\", bottom: \"38%\", position: \"absolute\"}}>{todo.title}</div> {/* | Completed: {todo.completed === true ? <div>True</div> : <div>False</div>} */}\n                </div>\n              ))}\n          </div>\n        )\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}