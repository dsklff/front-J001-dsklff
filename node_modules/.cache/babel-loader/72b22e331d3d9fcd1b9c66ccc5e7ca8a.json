{"ast":null,"code":"var _jsxFileName = \"/Users/dsklff/Desktop/azimut-lab/src/App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(data => {\n      this.setState({\n        todo: data,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        todos = _this$state.todos,\n        isLoaded = _this$state.isLoaded;\n    console.log(this.state);\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, todos.map(todo => React.createElement(\"li\", {\n        key: todo.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Title: \", todo.title, \" | Completed: \", todo.completed))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsklff/Desktop/azimut-lab/src/App.js"],"names":["React","App","Component","constructor","state","todos","isLoaded","componentDidMount","fetch","then","response","json","data","setState","todo","render","console","log","map","id","title","completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,IADM;AAEZN,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAIH,KAPL;AAQD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,sBAEkB,KAAKX,KAFvB;AAAA,QAEFC,KAFE,eAEFA,KAFE;AAAA,QAEKC,QAFL,eAEKA,QAFL;AAGPU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;;AAEA,QAAG,CAACE,QAAJ,EAAc;AACV,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACH,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACa,GAAN,CAAUJ,IAAI,IACb;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYL,IAAI,CAACM,KADjB,oBACsCN,IAAI,CAACO,SAD3C,CADD,CADH,CADF,CADF;AAWH;AACF;;AAxC+B;;AA2ClC,eAAepB,GAAf","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      todos: [],\n      isLoaded: false,\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n              todo: data,\n              isLoaded: true,\n            })\n        })\n  }\n\n  render() {\n\n    var {todos, isLoaded } = this.state;\n    console.log(this.state)\n\n    if(!isLoaded) {\n        return <div>Loading...</div>\n    } else {\n        return (\n          <div>\n            <ul>\n              {todos.map(todo => (\n                <li key={todo.id}>\n                    Title: {todo.title} | Completed: {todo.completed}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}